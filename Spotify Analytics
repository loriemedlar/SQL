--For this project, I downloaded Spotify data from Kaggle. Then I created a table to insert Spotify data into. Finally, I performed analytics on the data using SQL.

--Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

--Then I inserted the Spotify Data .csv into the table.

--Next, I explored the data using the following SQL:

--Which song is most likely to be a live recording?
SELECT artist_name, track_name, liveness
FROM BIT_DB.Spotifydata
WHERE liveness =
(SELECT  MAX(liveness)
FROM BIT_DB.Spotifydata);

--What are the top 10 most popular songs and their artists?
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
Order by popularity DESC
Limit 10;

--Which artist has the least popular song?
SELECT artist_name, popularity
FROM BIT_DB.Spotifydata
Order by popularity
LIMIT 1;

--Which five songs have the most positve mood?
Select track_name, valence
From BIT_DB.Spotifydata
Order by valence DESC
LIMIT 5;

--Which artists have three or more songs in Spotify's Top 50 Songs in 2021?
SELECT artist_name, COUNT(*)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY COUNT(*) DESC
LIMIT 5;

--Which song is the most acoustic?
SELECT artist_name, track_name, acousticness
FROM BIT_DB.Spotifydata
WHERE acousticness =
(SELECT MAX (acousticness)
FROM BIT_DB.Spotifydata);

--What is the average popularity of Doja Cat's songs?
Select artist_name, AVG(popularity)
FROM BIT_DB.Spotifydata
WHERE artist_name = 'Doja Cat';

--Label every artist with an average popularity of 90 or above as a "Top Star"
SELECT artist_name, AVG(popularity) AS AvgPopularity, 'Top Star' as tag
FROM Spotifydata
GROUP BY artist_name
HAVING AvgPopularity >= 90;"

